from aws_cdk import (
    Stack,
    aws_ec2 as ec2,
    aws_rds as rds
)
from constructs import Construct

class RdsDbSubnetGroupStack(Stack):
    def __init__(self, scope: Construct, construct_id: str, **kwargs) -> None:
        super().__init__(scope, construct_id, **kwargs)

        # Create a VPC with subnets in two different AZs
        vpc = ec2.Vpc(self, "MyVPC",
                      max_azs=2,  # This ensures the VPC will span at least two AZs
                      subnet_configuration=[
                          ec2.SubnetConfiguration(
                              name="Public",
                              subnet_type=ec2.SubnetType.PUBLIC,
                              cidr_mask=24
                          ),
                          ec2.SubnetConfiguration(
                              name="Private",
                              subnet_type=ec2.SubnetType.PRIVATE_WITH_NAT,
                              cidr_mask=24
                          )
                      ]
                     )

        # Get the private subnets to use for the DB Subnet Group
        private_subnets = vpc.select_subnets(subnet_type=ec2.SubnetType.PRIVATE_WITH_NAT)

        # Create the DB Subnet Group
        db_subnet_group = rds.CfnDBSubnetGroup(self, "MyDBSubnetGroup",
                                               db_subnet_group_description="My DB Subnet Group",
                                               subnet_ids=[subnet.subnet_id for subnet in private_subnets.subnets],
                                               db_subnet_group_name="my-dbsubnet-group"
                                              )



----
  
