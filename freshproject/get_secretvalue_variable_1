from aws_cdk import (
    Stack,
    aws_secretsmanager as secretsmanager,
    CfnOutput
)
from constructs import Construct

class SecretsManagerStack(Stack):
    def __init__(self, scope: Construct, construct_id: str, **kwargs):
        super().__init__(scope, construct_id, **kwargs)

        # Create a secret
        secret = secretsmanager.Secret(self, "MySecret",
            description="This secret holds a sensitive password",
            generate_secret_string=secretsmanager.SecretStringGenerator(
                secret_string_template='{"username":"user"}',
                generate_string_key="password",
                exclude_characters='"@/\'
            )
        )

        # Output the ARN of the secret (not the secret value itself)
        CfnOutput(self, "SecretARN",
            value=secret.secret_arn,
            description="ARN of the generated secret"
        )

        # This is highly discouraged, but for demonstration:
        # Output the password directly (DO NOT DO THIS IN PRODUCTION)
        CfnOutput(self, "GeneratedPassword",
            value=secret.secret_value_from_json("password").to_string(),
            description="Password generated by Secrets Manager"
        )

# Add this stack to your app.py or the main deployment script
from aws_cdk import App
from secrets_manager_stack import SecretsManagerStack

app = App()
SecretsManagerStack(app, "SecretsManagerStack")
app.synth()
