from aws_cdk import (
    Stack,
    aws_secretsmanager as secretsmanager,
    aws_redshiftserverless as redshiftserverless
)
from constructs import Construct

class RedshiftSecretsStack(Stack):
    def __init__(self, scope: Construct, id: str, **kwargs) -> None:
        super().__init__(scope, id, **kwargs)

        # Create a secret in AWS Secrets Manager
        redshift_credentials = secretsmanager.Secret(self, "RedshiftCredentials",
            secret_name="redshift/serverless/credentials",
            generate_secret_string=secretsmanager.SecretStringGenerator(
                secret_string_template='{"username":"harish"}',
                generate_string_key="password",
                exclude_characters='"@/\\'
            )
        )

        # Create a Redshift Serverless Namespace using the secret credentials
        redshift_namespace = redshiftserverless.CfnNamespace(self, "MyRedshiftNamespace",
            namespace_name="MyRedshiftNamespace",
            admin_user_name=redshift_credentials.secret_value_from_json("username").to_string(),
            admin_user_password=redshift_credentials.secret_value_from_json("password").to_string(),
            db_name="MyDatabase"
        )

# Add to your app.py or the main deployment script
from aws_cdk import App
from redshift_stack import RedshiftSecretsStack

app = App()
RedshiftSecretsStack(app, "RedshiftSecretsStack")
app.synth()
