from aws_cdk import (
    Stack,
    aws_secretsmanager as secretsmanager
)
from constructs import Construct

class MySecretsStack(Stack):
    def __init__(self, scope: Construct, id: str, **kwargs) -> None:
        super().__init__(scope, id, **kwargs)

        # Create a secret in AWS Secrets Manager
        secret = secretsmanager.Secret(self, "MySecret",
            secret_name="myapp/username-password",
            description="Stores the username and a generated password for my application",
            generate_secret_string=secretsmanager.SecretStringGenerator(
                secret_string_template='{"username":"harish"}',  # Static username
                generate_string_key="password",                 # Key to generate a random password
                password_length=16,                             # Specify the desired length of the password
                exclude_characters='{}[]()#/%&*"\\'            # Characters to exclude from the password
            )
        )

        # Output the ARN of the created secret (optional)
        cdk.CfnOutput(self, "SecretARN", value=secret.secret_arn, description="ARN of the secret storing credentials")

# Add this stack to your app.py or the main deployment script
from aws_cdk import App
from secrets_stack import MySecretsStack

app = App()
MySecretsStack(app, "MySecretsStack")
app.synth()
