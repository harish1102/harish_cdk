from aws_cdk import aws_rds as rds
from aws_cdk import aws_ec2 as ec2
from aws_cdk import core as cdk

class AuroraPostgresClusterStack(cdk.Stack):
    def __init__(self, scope: cdk.Construct, id: str, region: str, **kwargs) -> None:
        super().__init__(scope, id, **kwargs)

        # Use an existing VPC or create a new one
        vpc = ec2.Vpc.from_lookup(self, "VPC", is_default=True)

        # Create the Aurora cluster
        cluster = rds.DatabaseCluster(self, "AuroraCluster",
                                       engine=rds.DatabaseClusterEngine.aurora_postgres(
                                           version=rds.AuroraPostgresEngineVersion.VER_12_4),
                                       instance_props={
                                           "instance_type": ec2.InstanceType.of(
                                               ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.SMALL),
                                           "vpc_subnets": {
                                               "subnet_type": ec2.SubnetType.PUBLIC
                                           },
                                           "vpc": vpc
                                       },
                                       # Define other properties like credentials, cluster size, etc.
                                       )
